package edu.black.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class EasybuyUserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public EasybuyUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andEuUserIdIsNull() {
            addCriterion("eu_user_id is null");
            return (Criteria) this;
        }

        public Criteria andEuUserIdIsNotNull() {
            addCriterion("eu_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andEuUserIdEqualTo(String value) {
            addCriterion("eu_user_id =", value, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdNotEqualTo(String value) {
            addCriterion("eu_user_id <>", value, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdGreaterThan(String value) {
            addCriterion("eu_user_id >", value, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("eu_user_id >=", value, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdLessThan(String value) {
            addCriterion("eu_user_id <", value, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdLessThanOrEqualTo(String value) {
            addCriterion("eu_user_id <=", value, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdLike(String value) {
            addCriterion("eu_user_id like", value, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdNotLike(String value) {
            addCriterion("eu_user_id not like", value, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdIn(List<String> values) {
            addCriterion("eu_user_id in", values, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdNotIn(List<String> values) {
            addCriterion("eu_user_id not in", values, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdBetween(String value1, String value2) {
            addCriterion("eu_user_id between", value1, value2, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserIdNotBetween(String value1, String value2) {
            addCriterion("eu_user_id not between", value1, value2, "euUserId");
            return (Criteria) this;
        }

        public Criteria andEuUserNameIsNull() {
            addCriterion("eu_user_name is null");
            return (Criteria) this;
        }

        public Criteria andEuUserNameIsNotNull() {
            addCriterion("eu_user_name is not null");
            return (Criteria) this;
        }

        public Criteria andEuUserNameEqualTo(String value) {
            addCriterion("eu_user_name =", value, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameNotEqualTo(String value) {
            addCriterion("eu_user_name <>", value, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameGreaterThan(String value) {
            addCriterion("eu_user_name >", value, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("eu_user_name >=", value, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameLessThan(String value) {
            addCriterion("eu_user_name <", value, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameLessThanOrEqualTo(String value) {
            addCriterion("eu_user_name <=", value, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameLike(String value) {
            addCriterion("eu_user_name like", value, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameNotLike(String value) {
            addCriterion("eu_user_name not like", value, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameIn(List<String> values) {
            addCriterion("eu_user_name in", values, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameNotIn(List<String> values) {
            addCriterion("eu_user_name not in", values, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameBetween(String value1, String value2) {
            addCriterion("eu_user_name between", value1, value2, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuUserNameNotBetween(String value1, String value2) {
            addCriterion("eu_user_name not between", value1, value2, "euUserName");
            return (Criteria) this;
        }

        public Criteria andEuPasswordIsNull() {
            addCriterion("eu_password is null");
            return (Criteria) this;
        }

        public Criteria andEuPasswordIsNotNull() {
            addCriterion("eu_password is not null");
            return (Criteria) this;
        }

        public Criteria andEuPasswordEqualTo(String value) {
            addCriterion("eu_password =", value, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordNotEqualTo(String value) {
            addCriterion("eu_password <>", value, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordGreaterThan(String value) {
            addCriterion("eu_password >", value, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("eu_password >=", value, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordLessThan(String value) {
            addCriterion("eu_password <", value, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordLessThanOrEqualTo(String value) {
            addCriterion("eu_password <=", value, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordLike(String value) {
            addCriterion("eu_password like", value, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordNotLike(String value) {
            addCriterion("eu_password not like", value, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordIn(List<String> values) {
            addCriterion("eu_password in", values, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordNotIn(List<String> values) {
            addCriterion("eu_password not in", values, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordBetween(String value1, String value2) {
            addCriterion("eu_password between", value1, value2, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuPasswordNotBetween(String value1, String value2) {
            addCriterion("eu_password not between", value1, value2, "euPassword");
            return (Criteria) this;
        }

        public Criteria andEuSexIsNull() {
            addCriterion("eu_sex is null");
            return (Criteria) this;
        }

        public Criteria andEuSexIsNotNull() {
            addCriterion("eu_sex is not null");
            return (Criteria) this;
        }

        public Criteria andEuSexEqualTo(String value) {
            addCriterion("eu_sex =", value, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexNotEqualTo(String value) {
            addCriterion("eu_sex <>", value, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexGreaterThan(String value) {
            addCriterion("eu_sex >", value, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexGreaterThanOrEqualTo(String value) {
            addCriterion("eu_sex >=", value, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexLessThan(String value) {
            addCriterion("eu_sex <", value, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexLessThanOrEqualTo(String value) {
            addCriterion("eu_sex <=", value, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexLike(String value) {
            addCriterion("eu_sex like", value, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexNotLike(String value) {
            addCriterion("eu_sex not like", value, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexIn(List<String> values) {
            addCriterion("eu_sex in", values, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexNotIn(List<String> values) {
            addCriterion("eu_sex not in", values, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexBetween(String value1, String value2) {
            addCriterion("eu_sex between", value1, value2, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuSexNotBetween(String value1, String value2) {
            addCriterion("eu_sex not between", value1, value2, "euSex");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayIsNull() {
            addCriterion("eu_birthday is null");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayIsNotNull() {
            addCriterion("eu_birthday is not null");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayEqualTo(Date value) {
            addCriterionForJDBCDate("eu_birthday =", value, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate("eu_birthday <>", value, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayGreaterThan(Date value) {
            addCriterionForJDBCDate("eu_birthday >", value, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("eu_birthday >=", value, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayLessThan(Date value) {
            addCriterionForJDBCDate("eu_birthday <", value, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("eu_birthday <=", value, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayIn(List<Date> values) {
            addCriterionForJDBCDate("eu_birthday in", values, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayNotIn(List<Date> values) {
            addCriterionForJDBCDate("eu_birthday not in", values, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("eu_birthday between", value1, value2, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuBirthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("eu_birthday not between", value1, value2, "euBirthday");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeIsNull() {
            addCriterion("eu_identity_code is null");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeIsNotNull() {
            addCriterion("eu_identity_code is not null");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeEqualTo(String value) {
            addCriterion("eu_identity_code =", value, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeNotEqualTo(String value) {
            addCriterion("eu_identity_code <>", value, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeGreaterThan(String value) {
            addCriterion("eu_identity_code >", value, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeGreaterThanOrEqualTo(String value) {
            addCriterion("eu_identity_code >=", value, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeLessThan(String value) {
            addCriterion("eu_identity_code <", value, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeLessThanOrEqualTo(String value) {
            addCriterion("eu_identity_code <=", value, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeLike(String value) {
            addCriterion("eu_identity_code like", value, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeNotLike(String value) {
            addCriterion("eu_identity_code not like", value, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeIn(List<String> values) {
            addCriterion("eu_identity_code in", values, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeNotIn(List<String> values) {
            addCriterion("eu_identity_code not in", values, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeBetween(String value1, String value2) {
            addCriterion("eu_identity_code between", value1, value2, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuIdentityCodeNotBetween(String value1, String value2) {
            addCriterion("eu_identity_code not between", value1, value2, "euIdentityCode");
            return (Criteria) this;
        }

        public Criteria andEuEmailIsNull() {
            addCriterion("eu_email is null");
            return (Criteria) this;
        }

        public Criteria andEuEmailIsNotNull() {
            addCriterion("eu_email is not null");
            return (Criteria) this;
        }

        public Criteria andEuEmailEqualTo(String value) {
            addCriterion("eu_email =", value, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailNotEqualTo(String value) {
            addCriterion("eu_email <>", value, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailGreaterThan(String value) {
            addCriterion("eu_email >", value, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailGreaterThanOrEqualTo(String value) {
            addCriterion("eu_email >=", value, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailLessThan(String value) {
            addCriterion("eu_email <", value, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailLessThanOrEqualTo(String value) {
            addCriterion("eu_email <=", value, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailLike(String value) {
            addCriterion("eu_email like", value, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailNotLike(String value) {
            addCriterion("eu_email not like", value, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailIn(List<String> values) {
            addCriterion("eu_email in", values, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailNotIn(List<String> values) {
            addCriterion("eu_email not in", values, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailBetween(String value1, String value2) {
            addCriterion("eu_email between", value1, value2, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuEmailNotBetween(String value1, String value2) {
            addCriterion("eu_email not between", value1, value2, "euEmail");
            return (Criteria) this;
        }

        public Criteria andEuMobileIsNull() {
            addCriterion("eu_mobile is null");
            return (Criteria) this;
        }

        public Criteria andEuMobileIsNotNull() {
            addCriterion("eu_mobile is not null");
            return (Criteria) this;
        }

        public Criteria andEuMobileEqualTo(String value) {
            addCriterion("eu_mobile =", value, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileNotEqualTo(String value) {
            addCriterion("eu_mobile <>", value, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileGreaterThan(String value) {
            addCriterion("eu_mobile >", value, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileGreaterThanOrEqualTo(String value) {
            addCriterion("eu_mobile >=", value, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileLessThan(String value) {
            addCriterion("eu_mobile <", value, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileLessThanOrEqualTo(String value) {
            addCriterion("eu_mobile <=", value, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileLike(String value) {
            addCriterion("eu_mobile like", value, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileNotLike(String value) {
            addCriterion("eu_mobile not like", value, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileIn(List<String> values) {
            addCriterion("eu_mobile in", values, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileNotIn(List<String> values) {
            addCriterion("eu_mobile not in", values, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileBetween(String value1, String value2) {
            addCriterion("eu_mobile between", value1, value2, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuMobileNotBetween(String value1, String value2) {
            addCriterion("eu_mobile not between", value1, value2, "euMobile");
            return (Criteria) this;
        }

        public Criteria andEuAddressIsNull() {
            addCriterion("eu_address is null");
            return (Criteria) this;
        }

        public Criteria andEuAddressIsNotNull() {
            addCriterion("eu_address is not null");
            return (Criteria) this;
        }

        public Criteria andEuAddressEqualTo(String value) {
            addCriterion("eu_address =", value, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressNotEqualTo(String value) {
            addCriterion("eu_address <>", value, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressGreaterThan(String value) {
            addCriterion("eu_address >", value, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressGreaterThanOrEqualTo(String value) {
            addCriterion("eu_address >=", value, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressLessThan(String value) {
            addCriterion("eu_address <", value, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressLessThanOrEqualTo(String value) {
            addCriterion("eu_address <=", value, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressLike(String value) {
            addCriterion("eu_address like", value, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressNotLike(String value) {
            addCriterion("eu_address not like", value, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressIn(List<String> values) {
            addCriterion("eu_address in", values, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressNotIn(List<String> values) {
            addCriterion("eu_address not in", values, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressBetween(String value1, String value2) {
            addCriterion("eu_address between", value1, value2, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuAddressNotBetween(String value1, String value2) {
            addCriterion("eu_address not between", value1, value2, "euAddress");
            return (Criteria) this;
        }

        public Criteria andEuLoginIsNull() {
            addCriterion("eu_login is null");
            return (Criteria) this;
        }

        public Criteria andEuLoginIsNotNull() {
            addCriterion("eu_login is not null");
            return (Criteria) this;
        }

        public Criteria andEuLoginEqualTo(Double value) {
            addCriterion("eu_login =", value, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuLoginNotEqualTo(Double value) {
            addCriterion("eu_login <>", value, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuLoginGreaterThan(Double value) {
            addCriterion("eu_login >", value, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuLoginGreaterThanOrEqualTo(Double value) {
            addCriterion("eu_login >=", value, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuLoginLessThan(Double value) {
            addCriterion("eu_login <", value, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuLoginLessThanOrEqualTo(Double value) {
            addCriterion("eu_login <=", value, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuLoginIn(List<Double> values) {
            addCriterion("eu_login in", values, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuLoginNotIn(List<Double> values) {
            addCriterion("eu_login not in", values, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuLoginBetween(Double value1, Double value2) {
            addCriterion("eu_login between", value1, value2, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuLoginNotBetween(Double value1, Double value2) {
            addCriterion("eu_login not between", value1, value2, "euLogin");
            return (Criteria) this;
        }

        public Criteria andEuStatusIsNull() {
            addCriterion("eu_status is null");
            return (Criteria) this;
        }

        public Criteria andEuStatusIsNotNull() {
            addCriterion("eu_status is not null");
            return (Criteria) this;
        }

        public Criteria andEuStatusEqualTo(Integer value) {
            addCriterion("eu_status =", value, "euStatus");
            return (Criteria) this;
        }

        public Criteria andEuStatusNotEqualTo(Integer value) {
            addCriterion("eu_status <>", value, "euStatus");
            return (Criteria) this;
        }

        public Criteria andEuStatusGreaterThan(Integer value) {
            addCriterion("eu_status >", value, "euStatus");
            return (Criteria) this;
        }

        public Criteria andEuStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("eu_status >=", value, "euStatus");
            return (Criteria) this;
        }

        public Criteria andEuStatusLessThan(Integer value) {
            addCriterion("eu_status <", value, "euStatus");
            return (Criteria) this;
        }

        public Criteria andEuStatusLessThanOrEqualTo(Integer value) {
            addCriterion("eu_status <=", value, "euStatus");
            return (Criteria) this;
        }

        public Criteria andEuStatusIn(List<Integer> values) {
            addCriterion("eu_status in", values, "euStatus");
            return (Criteria) this;
        }

        public Criteria andEuStatusNotIn(List<Integer> values) {
            addCriterion("eu_status not in", values, "euStatus");
            return (Criteria) this;
        }

        public Criteria andEuStatusBetween(Integer value1, Integer value2) {
            addCriterion("eu_status between", value1, value2, "euStatus");
            return (Criteria) this;
        }

        public Criteria andEuStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("eu_status not between", value1, value2, "euStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table easybuy_user
     *
     * @mbg.generated do_not_delete_during_merge Tue May 01 14:15:33 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table easybuy_user
     *
     * @mbg.generated Tue May 01 14:15:33 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}